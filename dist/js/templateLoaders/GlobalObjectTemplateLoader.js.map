{"version":3,"sources":["../../../src/js/templateLoaders/GlobalObjectTemplateLoader.js"],"names":["ObjectTemplateLoader","conf","object","window","templateFound","name","loadTemplate"],"mappings":";;;;AAAA;;;;;;;;;;;;IACqBA,oB;;;AACjB,kCAAYC,IAAZ,EAAkB;AAAA;;AAAA,qDACd,gCADc;;AAEd,YAAI,CAACA,IAAL,EAAW;AACP;AACH;AACD,cAAKC,MAAL,GAAcD,KAAKC,MAAL,IAAeC,MAA7B;AALc;AAMjB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;mCAGAC,a,0BAAcC,I,EAAM;AAChB,eAAOF,OAAO,KAAKD,MAAZ,KAAuBC,OAAO,KAAKD,MAAZ,EAAoBG,IAApB,CAA9B;AACH,K;;mCAEDC,Y,yBAAaD,I,EAAM;AACf,eAAOF,OAAO,KAAKD,MAAZ,EAAoBG,IAApB,CAAP;AACH,K;;;;;kBA1CgBL,oB","file":"GlobalObjectTemplateLoader.js","sourcesContent":["import AbstractTemplateLoader from './abstractTemplateLoader';\nexport default class ObjectTemplateLoader extends AbstractTemplateLoader {\n    constructor(conf) {\n        super();\n        if (!conf) {\n            // return;\n        }\n        this.object = conf.object || window;\n    }\n\n    // getTemplate(tplOverride) {\n    //     let tpl;\n    //\n    //     /**\n    //      * Try to find a given override first\n    //      */\n    //     if (tplOverride && (tpl = document.getElementById(tplOverride))) {\n    //         return tpl.innerHTML;\n    //     }\n    //\n    //     /**\n    //      * Walk up the prototype chain to find matching templates\n    //      */\n    //     let curObject = this;\n    //     while (curObject && curObject.constructor.name !== 'BiontView') {\n    //         if (tpl = document.getElementById(curObject.constructor.name)) {\n    //             return tpl.innerHTML;\n    //         }\n    //         curObject = Object.getPrototypeOf(curObject);\n    //     }\n    //\n    //\n    //     console.error('Could not find template for View ' + this.constructor.name);\n    //     return '<div class=\"tplError\">MISSING TEMPLATE</div>';\n    // }\n\n\n    templateFound(name) {\n        return window[this.object] && window[this.object][name];\n    }\n\n    loadTemplate(name) {\n        return window[this.object][name];\n    }\n}"]}