{"version":3,"sources":["../../../src/js/Views/LazyLoadView.js"],"names":["LazyLoadView","initialize","queue","constructor","name","TypeError","render","force","rendered","$el","on","e","data","subview","console","log","renderSubView","view","element","forced","shouldRenderSubView","handle","inView","isInView","extend"],"mappings":";;;;AAAA;;;;;;;;;;;;IACqBA,Y;;;;;;;;;wBAEpBC,U,yBAAa;AACZ,kCAAMA,UAAN;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,MAAI,KAAKC,WAAL,CAAiBC,IAAjB,KAA0B,cAA9B,EAA8C;AAC7C,SAAM,IAAIC,SAAJ,CAAc,kDAAd,CAAN;AACA;AACD,E;;wBAEDC,M,mBAAOC,K,EAAO;AAAA;;AACb,MAAIC,WAAW,KAAKA,QAApB;AACA,kCAAMF,MAAN,YAAaC,KAAb;;AAEA,MAAI,CAACC,QAAD,IAAaD,KAAjB,EAAwB;AACvB,QAAKE,GAAL,CAASC,EAAT,CAAY,aAAZ,EAA2B,UAACC,CAAD,EAAIC,IAAJ,EAAa;AACvC,QAAI,OAAKV,KAAL,CAAWU,KAAKC,OAAhB,CAAJ,EAA8B;AAC7BC,aAAQC,GAAR,CAAY,gBAAZ,EAA8B,OAAKb,KAAL,CAAWU,KAAKC,OAAhB,CAA9B;AACA,YAAKG,aAAL,CACCJ,KAAKC,OADN,EAEC,OAAKX,KAAL,CAAWU,KAAKC,OAAhB,EAAyBI,IAF1B,EAGC,OAAKf,KAAL,CAAWU,KAAKC,OAAhB,EAAyBK,OAH1B,EAIC,OAAKhB,KAAL,CAAWU,KAAKC,OAAhB,EAAyBM,MAJ1B;AAMA,YAAO,OAAKjB,KAAL,CAAWU,KAAKC,OAAhB,CAAP;AACA;AACD,IAXD;;AAaA,QAAKJ,GAAL,CAASC,EAAT,CAAY,aAAZ,EAA2B,UAACC,CAAD,EAAIC,IAAJ,EAAa;AACvCE,YAAQC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B;AACA,IAFD;AAGA;AACD,E;;wBAEDQ,mB,gCAAoBC,M,EAAQJ,I,EAAMC,O,EAASC,M,EAAQ;AAClD,MAAIG,SAAS,KAAKC,QAAL,CAAcL,QAAQ,CAAR,CAAd,CAAb;AACA,MAAI,CAACI,MAAL,EAAa;AACZR,WAAQC,GAAR,CAAY,gBAAZ,EAA8BM,MAA9B;AACA,QAAKnB,KAAL,CAAWmB,MAAX,IAAqB,EAACJ,UAAD,EAAOC,gBAAP,EAAgBC,cAAhB,EAArB;AACA;AACD,SAAOG,MAAP;AACA,E;;;EAzCwC,wBAAcE,MAAd,E;;kBAArBxB,Y","file":"LazyLoadView.js","sourcesContent":["import ScrollSpyView from './ScrollSpyView';\nexport default class LazyLoadView extends ScrollSpyView.extend() {\n\n\tinitialize() {\n\t\tsuper.initialize();\n\t\tthis.queue = {};\n\t\tif (this.constructor.name === 'LazyLoadView') {\n\t\t\tthrow new TypeError(\"Cannot construct LazyLoadView instances directly\");\n\t\t}\n\t}\n\n\trender(force) {\n\t\tlet rendered = this.rendered;\n\t\tsuper.render(force);\n\n\t\tif (!rendered || force) {\n\t\t\tthis.$el.on('scrollEnter', (e, data) => {\n\t\t\t\tif (this.queue[data.subview]) {\n\t\t\t\t\tconsole.log('lazy rendering', this.queue[data.subview]);\n\t\t\t\t\tthis.renderSubView(\n\t\t\t\t\t\tdata.subview,\n\t\t\t\t\t\tthis.queue[data.subview].view,\n\t\t\t\t\t\tthis.queue[data.subview].element,\n\t\t\t\t\t\tthis.queue[data.subview].forced\n\t\t\t\t\t);\n\t\t\t\t\tdelete this.queue[data.subview];\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.$el.on('scrollLeave', (e, data) => {\n\t\t\t\tconsole.log('scrollLeave', data);\n\t\t\t})\n\t\t}\n\t}\n\n\tshouldRenderSubView(handle, view, element, forced) {\n\t\tlet inView = this.isInView(element[0]);\n\t\tif (!inView) {\n\t\t\tconsole.log('added to queue', handle);\n\t\t\tthis.queue[handle] = {view, element, forced};\n\t\t}\n\t\treturn inView;\n\t}\n}"]}